import { withAuth } from "next-auth/middleware"
import { NextResponse } from "next/server"

export default withAuth(
  function middleware(req) {
    const token = req.nextauth.token
    const path = req.nextUrl.pathname

    // Allow anyone to access auth pages
    if (path.startsWith('/auth/')) {
      return NextResponse.next()
    }

    // Check if user is authenticated
    if (!token) {
      return NextResponse.redirect(new URL('/auth/signin', req.url))
    }

    // Admin routes - require ADMIN role
    if (path.startsWith('/admin') && token.role !== 'ADMIN') {
      return NextResponse.redirect(new URL('/auth/signin', req.url))
    }

    // Seller routes - require SELLER role
    if (path.startsWith('/seller') && token.role !== 'SELLER') {
      return NextResponse.redirect(new URL('/auth/signin', req.url))
    }

    // Buyer routes - require BUYER role
    if (path.startsWith('/buyer') && token.role !== 'BUYER') {
      return NextResponse.redirect(new URL('/auth/signin', req.url))
    }

    return NextResponse.next()
  },
  {
    callbacks: {
      authorized: ({ token, req }) => {
        const path = req.nextUrl.pathname
        // Always allow access to auth pages
        if (path.startsWith('/auth/')) return true
        // For other protected routes, check token
        return !!token
      }
    },
  }
)

export const config = {
  matcher: [
    '/dashboard/:path*',
    '/admin/:path*',
    '/api/admin/:path*',
    '/onboarding/:path*',
    '/seller/:path*',
    '/buyer/:path*'
  ]
}